cpu-bind=MASK - kisexe12, task  0  0 [2943602]: mask 0xffffff set
Workingdir: /work/dlclarge1/schaefeb-AutoFE/meta
Started at Wed Jul  2 11:39:53 PM CEST 2025
Running job MFE_Group_MF using 24 cpus per node with given JID 19131202 on queue bosch_cpu-cascadelake
Allocated memory per node: 153600 MB
Requirement already satisfied: uv in /home/schaefeb/miniconda3/lib/python3.12/site-packages (0.7.13)
Using CPython 3.11.13
Creating virtual environment with seed packages at: /home/schaefeb/.venvs/tabarena
 + pip==25.1.1
 + setuptools==80.9.0
 + wheel==0.45.1
Activate with: source /home/schaefeb/.venvs/tabarena/bin/activate
/var/spool/slurm/job19131202/slurm_script: line 36: source: /home/schaefeb/.venvs/tabarena: is a directory
Virtual Environment Activated
fatal: destination path 'tabrepo' already exists and is not an empty directory.
Requirement already satisfied: lightgbm in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 1)) (4.6.0)
Requirement already satisfied: numpy in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 2)) (2.1.3)
Requirement already satisfied: openfe in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 3)) (0.0.12)
Requirement already satisfied: openml in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 4)) (0.15.1)
Requirement already satisfied: pandas in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 5)) (2.2.3)
Requirement already satisfied: scikit-learn in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 6)) (1.6.1)
Requirement already satisfied: pymfe in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 7)) (0.4.3)
Requirement already satisfied: ray in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 8)) (2.44.1)
Requirement already satisfied: autogluon in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 9)) (1.3.1)
Requirement already satisfied: requests in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 10)) (2.32.4)
Requirement already satisfied: pyyaml in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 11)) (6.0.2)
Requirement already satisfied: scipy in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 12)) (1.15.3)
Requirement already satisfied: tqdm in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 13)) (4.67.1)
Requirement already satisfied: psutil in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 14)) (7.0.0)
Requirement already satisfied: tensorflow in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 15)) (2.19.0)
Requirement already satisfied: torch in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 16)) (2.6.0)
Requirement already satisfied: tabpfn in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from -r requirements.txt (line 17)) (2.0.9)
Requirement already satisfied: pyarrow in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openfe->-r requirements.txt (line 3)) (20.0.0)
Requirement already satisfied: liac-arff>=2.4.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openml->-r requirements.txt (line 4)) (2.5.0)
Requirement already satisfied: xmltodict in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openml->-r requirements.txt (line 4)) (0.14.2)
Requirement already satisfied: python-dateutil in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openml->-r requirements.txt (line 4)) (2.9.0.post0)
Requirement already satisfied: minio in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openml->-r requirements.txt (line 4)) (7.2.15)
Requirement already satisfied: packaging in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openml->-r requirements.txt (line 4)) (23.2)
Requirement already satisfied: pytz>=2020.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pandas->-r requirements.txt (line 5)) (2025.1)
Requirement already satisfied: tzdata>=2022.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pandas->-r requirements.txt (line 5)) (2025.1)
Requirement already satisfied: joblib>=1.2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from scikit-learn->-r requirements.txt (line 6)) (1.5.1)
Requirement already satisfied: threadpoolctl>=3.1.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from scikit-learn->-r requirements.txt (line 6)) (3.6.0)
Requirement already satisfied: patsy in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pymfe->-r requirements.txt (line 7)) (1.0.1)
Requirement already satisfied: statsmodels in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pymfe->-r requirements.txt (line 7)) (0.14.4)
Requirement already satisfied: texttable in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pymfe->-r requirements.txt (line 7)) (1.7.0)
Requirement already satisfied: igraph>=0.10.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pymfe->-r requirements.txt (line 7)) (0.11.9)
Requirement already satisfied: gower in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pymfe->-r requirements.txt (line 7)) (0.1.2)
Requirement already satisfied: click>=7.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray->-r requirements.txt (line 8)) (8.2.1)
Requirement already satisfied: filelock in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray->-r requirements.txt (line 8)) (3.18.0)
Requirement already satisfied: jsonschema in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray->-r requirements.txt (line 8)) (4.23.0)
Requirement already satisfied: msgpack<2.0.0,>=1.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray->-r requirements.txt (line 8)) (1.1.1)
Requirement already satisfied: protobuf!=3.19.5,>=3.15.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray->-r requirements.txt (line 8)) (5.29.5)
Requirement already satisfied: aiosignal in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray->-r requirements.txt (line 8)) (1.3.2)
Requirement already satisfied: frozenlist in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray->-r requirements.txt (line 8)) (1.7.0)
Requirement already satisfied: autogluon.core==1.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.1)
Requirement already satisfied: autogluon.features==1.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon->-r requirements.txt (line 9)) (1.3.1)
Requirement already satisfied: autogluon.tabular==1.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.1)
Requirement already satisfied: autogluon.multimodal==1.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon->-r requirements.txt (line 9)) (1.3.1)
Requirement already satisfied: autogluon.timeseries==1.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.1)
Requirement already satisfied: networkx<4,>=3.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.5)
Requirement already satisfied: matplotlib<3.11,>=3.7.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.10.3)
Requirement already satisfied: boto3<2,>=1.10 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.38.41)
Requirement already satisfied: autogluon.common==1.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.1)
Requirement already satisfied: hyperopt<0.2.8,>=0.2.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.2.7)
Requirement already satisfied: Pillow<12,>=10.0.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (11.2.1)
Requirement already satisfied: lightning<2.7,>=2.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2.5.2)
Requirement already satisfied: transformers<4.50,>=4.38.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from transformers[sentencepiece]<4.50,>=4.38.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (4.49.0)
Requirement already satisfied: accelerate<2.0,>=0.34.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.8.1)
Requirement already satisfied: seqeval<1.3.0,>=1.2.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.2.2)
Requirement already satisfied: evaluate<0.5.0,>=0.4.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.4.4)
Requirement already satisfied: timm<1.0.7,>=0.9.5 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.0.3)
Requirement already satisfied: torchvision<0.22.0,>=0.16.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.21.0)
Requirement already satisfied: scikit-image<0.26.0,>=0.19.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.25.2)
Requirement already satisfied: text-unidecode<1.4,>=1.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3)
Requirement already satisfied: torchmetrics<1.8,>=1.2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.7.3)
Requirement already satisfied: omegaconf<2.4.0,>=2.1.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2.3.0)
Requirement already satisfied: pytorch-metric-learning<2.9,>=1.3.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2.8.1)
Requirement already satisfied: nlpaug<1.2.0,>=1.1.10 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.1.11)
Requirement already satisfied: nltk<3.9,>=3.4.5 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (3.8.1)
Requirement already satisfied: openmim<0.4.0,>=0.3.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.3.9)
Requirement already satisfied: defusedxml<0.7.2,>=0.7.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.7.1)
Requirement already satisfied: jinja2<3.2,>=3.0.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (3.1.6)
Requirement already satisfied: tensorboard<3,>=2.9 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2.19.0)
Requirement already satisfied: pytesseract<0.4,>=0.3.9 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.3.13)
Requirement already satisfied: nvidia-ml-py3<8.0,>=7.352.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (7.352.0)
Requirement already satisfied: pdf2image<1.19,>=1.17.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.17.0)
Requirement already satisfied: catboost<1.3,>=1.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.2.8)
Requirement already satisfied: einops<0.9,>=0.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.8.1)
Requirement already satisfied: xgboost<3.1,>=2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.0.2)
Requirement already satisfied: fastai<2.9,>=2.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.8.2)
Requirement already satisfied: huggingface-hub[torch] in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.33.0)
Requirement already satisfied: spacy<3.9 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.8.7)
Requirement already satisfied: pytorch-lightning in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.5.1.post0)
Requirement already satisfied: gluonts<0.17,>=0.15.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.16.1)
Requirement already satisfied: statsforecast<2.0.2,>=1.7.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.0.1)
Requirement already satisfied: mlforecast<0.14,>0.13 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.13.6)
Requirement already satisfied: utilsforecast<0.2.11,>=0.2.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.2.10)
Requirement already satisfied: coreforecast<0.0.16,>=0.0.12 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.0.15)
Requirement already satisfied: fugue>=0.9.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.9.1)
Requirement already satisfied: orjson~=3.9 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.10.18)
Requirement already satisfied: charset_normalizer<4,>=2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from requests->-r requirements.txt (line 10)) (2.0.4)
Requirement already satisfied: idna<4,>=2.5 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from requests->-r requirements.txt (line 10)) (3.4)
Requirement already satisfied: urllib3<3,>=1.21.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from requests->-r requirements.txt (line 10)) (2.1.0)
Requirement already satisfied: certifi>=2017.4.17 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from requests->-r requirements.txt (line 10)) (2024.2.2)
Requirement already satisfied: absl-py>=1.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (2.3.0)
Requirement already satisfied: astunparse>=1.6.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (1.6.3)
Requirement already satisfied: flatbuffers>=24.3.25 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (25.2.10)
Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (0.6.0)
Requirement already satisfied: google-pasta>=0.1.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (0.2.0)
Requirement already satisfied: libclang>=13.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (18.1.1)
Requirement already satisfied: opt-einsum>=2.3.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (3.4.0)
Requirement already satisfied: setuptools in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (68.2.2)
Requirement already satisfied: six>=1.12.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (1.17.0)
Requirement already satisfied: termcolor>=1.1.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (3.1.0)
Requirement already satisfied: typing-extensions>=3.6.6 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (4.14.0)
Requirement already satisfied: wrapt>=1.11.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (1.17.2)
Requirement already satisfied: grpcio<2.0,>=1.24.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (1.73.0)
Requirement already satisfied: keras>=3.5.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (3.10.0)
Requirement already satisfied: h5py>=3.11.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (3.14.0)
Requirement already satisfied: ml-dtypes<1.0.0,>=0.5.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorflow->-r requirements.txt (line 15)) (0.5.1)
Requirement already satisfied: fsspec in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (2025.3.0)
Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.4.127 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (12.4.127)
Requirement already satisfied: nvidia-cuda-runtime-cu12==12.4.127 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (12.4.127)
Requirement already satisfied: nvidia-cuda-cupti-cu12==12.4.127 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (12.4.127)
Requirement already satisfied: nvidia-cudnn-cu12==9.1.0.70 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (9.1.0.70)
Requirement already satisfied: nvidia-cublas-cu12==12.4.5.8 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (12.4.5.8)
Requirement already satisfied: nvidia-cufft-cu12==11.2.1.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (11.2.1.3)
Requirement already satisfied: nvidia-curand-cu12==10.3.5.147 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (10.3.5.147)
Requirement already satisfied: nvidia-cusolver-cu12==11.6.1.9 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (11.6.1.9)
Requirement already satisfied: nvidia-cusparse-cu12==12.3.1.170 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (12.3.1.170)
Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (0.6.2)
Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (2.21.5)
Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (12.4.127)
Requirement already satisfied: nvidia-nvjitlink-cu12==12.4.127 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (12.4.127)
Requirement already satisfied: triton==3.2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (3.2.0)
Requirement already satisfied: sympy==1.13.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from torch->-r requirements.txt (line 16)) (1.13.1)
Requirement already satisfied: mpmath<1.4,>=1.1.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from sympy==1.13.1->torch->-r requirements.txt (line 16)) (1.3.0)
Requirement already satisfied: wheel<1.0,>=0.23.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from astunparse>=1.6.0->tensorflow->-r requirements.txt (line 15)) (0.41.2)
Requirement already satisfied: hf-xet<2.0.0,>=1.1.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from huggingface-hub[torch]->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.1.4)
Requirement already satisfied: MarkupSafe>=2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from jinja2<3.2,>=3.0.3->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (3.0.2)
Requirement already satisfied: attrs>=22.2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from jsonschema->ray->-r requirements.txt (line 8)) (25.3.0)
Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from jsonschema->ray->-r requirements.txt (line 8)) (2025.4.1)
Requirement already satisfied: referencing>=0.28.4 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from jsonschema->ray->-r requirements.txt (line 8)) (0.36.2)
Requirement already satisfied: rpds-py>=0.7.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from jsonschema->ray->-r requirements.txt (line 8)) (0.25.1)
Requirement already satisfied: rich in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from keras>=3.5.0->tensorflow->-r requirements.txt (line 15)) (14.0.0)
Requirement already satisfied: namex in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from keras>=3.5.0->tensorflow->-r requirements.txt (line 15)) (0.1.0)
Requirement already satisfied: optree in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from keras>=3.5.0->tensorflow->-r requirements.txt (line 15)) (0.16.0)
Requirement already satisfied: markdown>=2.6.8 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorboard<3,>=2.9->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (3.8.2)
Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorboard<3,>=2.9->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.7.2)
Requirement already satisfied: werkzeug>=1.0.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from tensorboard<3,>=2.9->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (3.1.3)
Requirement already satisfied: argon2-cffi in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from minio->openml->-r requirements.txt (line 4)) (25.1.0)
Requirement already satisfied: pycryptodome in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from minio->openml->-r requirements.txt (line 4)) (3.23.0)
Requirement already satisfied: safetensors>=0.4.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from accelerate<2.0,>=0.34.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.5.3)
Requirement already satisfied: botocore<1.39.0,>=1.38.41 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from boto3<2,>=1.10->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.38.41)
Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from boto3<2,>=1.10->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.0.1)
Requirement already satisfied: s3transfer<0.14.0,>=0.13.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from boto3<2,>=1.10->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.13.0)
Requirement already satisfied: graphviz in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from catboost<1.3,>=1.2->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.21)
Requirement already satisfied: plotly in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from catboost<1.3,>=1.2->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (6.1.2)
Requirement already satisfied: datasets>=2.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from evaluate<0.5.0,>=0.4.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (3.6.0)
Requirement already satisfied: dill in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from evaluate<0.5.0,>=0.4.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.3.8)
Requirement already satisfied: xxhash in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from evaluate<0.5.0,>=0.4.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (3.5.0)
Requirement already satisfied: multiprocess in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from evaluate<0.5.0,>=0.4.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.70.16)
Requirement already satisfied: pip in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (23.3.1)
Requirement already satisfied: fastdownload<2,>=0.0.5 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.0.7)
Requirement already satisfied: fastcore<1.9,>=1.8.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.8.4)
Requirement already satisfied: fasttransform>=0.0.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.0.2)
Requirement already satisfied: fastprogress>=0.2.4 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.0.3)
Requirement already satisfied: plum-dispatch in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.5.7)
Requirement already satisfied: cloudpickle in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.1.1)
Requirement already satisfied: triad>=0.9.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fugue>=0.9.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.9.8)
Requirement already satisfied: adagio>=0.2.4 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fugue>=0.9.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.2.6)
Requirement already satisfied: pydantic<3,>=1.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from gluonts<0.17,>=0.15.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.11.7)
Requirement already satisfied: toolz~=0.10 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from gluonts<0.17,>=0.15.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.12.1)
Requirement already satisfied: future in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from hyperopt<0.2.8,>=0.2.7->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.0.0)
Requirement already satisfied: py4j in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from hyperopt<0.2.8,>=0.2.7->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.10.9.9)
Requirement already satisfied: lightning-utilities<2.0,>=0.10.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from lightning<2.7,>=2.2->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.14.3)
Requirement already satisfied: contourpy>=1.0.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from matplotlib<3.11,>=3.7.0->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.2)
Requirement already satisfied: cycler>=0.10 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from matplotlib<3.11,>=3.7.0->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.12.1)
Requirement already satisfied: fonttools>=4.22.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from matplotlib<3.11,>=3.7.0->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (4.58.4)
Requirement already satisfied: kiwisolver>=1.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from matplotlib<3.11,>=3.7.0->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.4.8)
Requirement already satisfied: pyparsing>=2.3.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from matplotlib<3.11,>=3.7.0->autogluon.core==1.3.1->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.2.3)
Requirement already satisfied: numba in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.61.2)
Requirement already satisfied: optuna in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (4.4.0)
Requirement already satisfied: window-ops in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.0.15)
Requirement already satisfied: gdown>=4.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from nlpaug<1.2.0,>=1.1.10->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (5.2.0)
Requirement already satisfied: regex>=2021.8.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from nltk<3.9,>=3.4.5->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2024.11.6)
Requirement already satisfied: antlr4-python3-runtime==4.9.* in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from omegaconf<2.4.0,>=2.1.1->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (4.9.3)
Requirement already satisfied: colorama in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.4.6)
Requirement already satisfied: model-index in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.1.11)
Requirement already satisfied: opendatalab in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.0.10)
Requirement already satisfied: tabulate in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.9.0)
Requirement already satisfied: aiohttp>=3.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.12.13)
Requirement already satisfied: aiohttp_cors in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.8.1)
Requirement already satisfied: colorful in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.5.6)
Requirement already satisfied: py-spy>=0.4.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.4.0)
Requirement already satisfied: opencensus in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.11.4)
Requirement already satisfied: prometheus_client>=0.7.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.22.1)
Requirement already satisfied: smart_open in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (7.1.0)
Requirement already satisfied: virtualenv!=20.21.1,>=20.0.24 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (20.31.2)
Requirement already satisfied: tensorboardX>=1.9 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.6.4)
Requirement already satisfied: imageio!=2.35.0,>=2.33 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from scikit-image<0.26.0,>=0.19.1->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2.37.0)
Requirement already satisfied: tifffile>=2022.8.12 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from scikit-image<0.26.0,>=0.19.1->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2025.6.11)
Requirement already satisfied: lazy-loader>=0.4 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from scikit-image<0.26.0,>=0.19.1->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.4)
Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.0.12)
Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.0.5)
Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.0.13)
Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.0.11)
Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.0.10)
Requirement already satisfied: thinc<8.4.0,>=8.3.4 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (8.3.6)
Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.1.3)
Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.5.1)
Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.0.10)
Requirement already satisfied: weasel<0.5.0,>=0.1.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.4.1)
Requirement already satisfied: typer<1.0.0,>=0.3.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.16.0)
Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.5.0)
Requirement already satisfied: tokenizers<0.22,>=0.21 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from transformers<4.50,>=4.38.0->transformers[sentencepiece]<4.50,>=4.38.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.21.1)
Requirement already satisfied: sentencepiece!=0.1.92,>=0.1.91 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from transformers[sentencepiece]<4.50,>=4.38.0->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.2.0)
Requirement already satisfied: argon2-cffi-bindings in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from argon2-cffi->minio->openml->-r requirements.txt (line 4)) (21.2.0)
Requirement already satisfied: markdown-it-py>=2.2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from rich->keras>=3.5.0->tensorflow->-r requirements.txt (line 15)) (3.0.0)
Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from rich->keras>=3.5.0->tensorflow->-r requirements.txt (line 15)) (2.19.2)
Requirement already satisfied: aiohappyeyeballs>=2.5.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from aiohttp>=3.7->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.6.1)
Requirement already satisfied: multidict<7.0,>=4.5 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from aiohttp>=3.7->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (6.5.0)
Requirement already satisfied: propcache>=0.2.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from aiohttp>=3.7->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.3.2)
Requirement already satisfied: yarl<2.0,>=1.17.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from aiohttp>=3.7->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.20.1)
Requirement already satisfied: beautifulsoup4 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from gdown>=4.0.0->nlpaug<1.2.0,>=1.1.10->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (4.13.4)
Requirement already satisfied: language-data>=1.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from langcodes<4.0.0,>=3.2.0->spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.0)
Requirement already satisfied: mdurl~=0.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from markdown-it-py>=2.2.0->rich->keras>=3.5.0->tensorflow->-r requirements.txt (line 15)) (0.1.2)
Requirement already satisfied: llvmlite<0.45,>=0.44.0dev0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from numba->mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.44.0)
Requirement already satisfied: annotated-types>=0.6.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pydantic<3,>=1.7->gluonts<0.17,>=0.15.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.7.0)
Requirement already satisfied: pydantic-core==2.33.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pydantic<3,>=1.7->gluonts<0.17,>=0.15.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.33.2)
Requirement already satisfied: typing-inspection>=0.4.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pydantic<3,>=1.7->gluonts<0.17,>=0.15.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.4.1)
Requirement already satisfied: blis<1.4.0,>=1.3.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from thinc<8.4.0,>=8.3.4->spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.0)
Requirement already satisfied: confection<1.0.0,>=0.0.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from thinc<8.4.0,>=8.3.4->spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.1.5)
Requirement already satisfied: fs in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from triad>=0.9.7->fugue>=0.9.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.4.16)
Requirement already satisfied: shellingham>=1.3.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from typer<1.0.0,>=0.3.0->spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.5.4)
Requirement already satisfied: distlib<1,>=0.3.7 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from virtualenv!=20.21.1,>=20.0.24->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.3.9)
Requirement already satisfied: platformdirs<5,>=3.9.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from virtualenv!=20.21.1,>=20.0.24->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.10.0)
Requirement already satisfied: cloudpathlib<1.0.0,>=0.7.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from weasel<0.5.0,>=0.1.0->spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.21.1)
Requirement already satisfied: cffi>=1.0.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi->minio->openml->-r requirements.txt (line 4)) (1.16.0)
Requirement already satisfied: ordered-set in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from model-index->openmim<0.4.0,>=0.3.7->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (4.1.0)
Requirement already satisfied: opencensus-context>=0.1.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.1.3)
Requirement already satisfied: google-api-core<3.0.0,>=1.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.25.1)
Requirement already satisfied: openxlab in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from opendatalab->openmim<0.4.0,>=0.3.7->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (0.0.11)
Requirement already satisfied: alembic>=1.5.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from optuna->mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.16.2)
Requirement already satisfied: colorlog in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from optuna->mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (6.9.0)
Requirement already satisfied: sqlalchemy>=1.4.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from optuna->mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.0.41)
Requirement already satisfied: narwhals>=1.15.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from plotly->catboost<1.3,>=1.2->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.43.1)
Requirement already satisfied: beartype>=0.16.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from plum-dispatch->fastai<2.9,>=2.3.1->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.21.0)
Requirement already satisfied: Mako in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from alembic>=1.5.0->optuna->mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.3.10)
Requirement already satisfied: pycparser in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->minio->openml->-r requirements.txt (line 4)) (2.21)
Requirement already satisfied: googleapis-common-protos<2.0.0,>=1.56.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from google-api-core<3.0.0,>=1.0.0->opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.70.0)
Requirement already satisfied: proto-plus<2.0.0,>=1.22.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from google-api-core<3.0.0,>=1.0.0->opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.26.1)
Requirement already satisfied: google-auth<3.0.0,>=2.14.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from google-api-core<3.0.0,>=1.0.0->opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (2.40.3)
Requirement already satisfied: marisa-trie>=1.1.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from language-data>=1.2->langcodes<4.0.0,>=3.2.0->spacy<3.9->autogluon.tabular[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.2.1)
Requirement already satisfied: greenlet>=1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from sqlalchemy>=1.4.2->optuna->mlforecast<0.14,>0.13->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (3.2.3)
Requirement already satisfied: soupsieve>1.2 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from beautifulsoup4->gdown>=4.0.0->nlpaug<1.2.0,>=1.1.10->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (2.7)
Requirement already satisfied: appdirs~=1.4.3 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from fs->triad>=0.9.7->fugue>=0.9.0->autogluon.timeseries==1.3.1->autogluon.timeseries[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (1.4.4)
Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from requests[socks]->gdown>=4.0.0->nlpaug<1.2.0,>=1.1.10->autogluon.multimodal==1.3.1->autogluon->-r requirements.txt (line 9)) (1.7.1)
Requirement already satisfied: cachetools<6.0,>=2.0.0 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (5.5.2)
Requirement already satisfied: pyasn1-modules>=0.2.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.4.2)
Requirement already satisfied: rsa<5,>=3.1.4 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (4.9.1)
Requirement already satisfied: pyasn1<0.7.0,>=0.6.1 in /home/schaefeb/miniconda3/lib/python3.12/site-packages (from pyasn1-modules>=0.2.1->google-auth<3.0.0,>=2.14.1->google-api-core<3.0.0,>=1.0.0->opencensus->ray[default,tune]<2.45,>=2.10.0; extra == "all"->autogluon.core[all]==1.3.1->autogluon->-r requirements.txt (line 9)) (0.6.1)
PYTHONPATH set to /work/dlclarge1/schaefeb-AutoFE/meta/src:
2025-07-02 23:40:22.639000: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-07-02 23:40:22.952695: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:467] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1751492423.067592 2943675 cuda_dnn.cc:8579] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1751492423.103634 2943675 cuda_blas.cc:1407] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
W0000 00:00:1751492423.360119 2943675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1751492423.360166 2943675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1751492423.360170 2943675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
W0000 00:00:1751492423.360172 2943675 computation_placer.cc:177] computation placer already registered. Please check linkage and avoid linking the same target more than once.
2025-07-02 23:40:23.389812: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/concept.py:166: RuntimeWarning: invalid value encountered in divide
  conceptvar_by_example = np.sum(weights * class_diff, axis=0) / np.sum(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'conceptvar' with summary 'sd'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'conceptvar' with summary 'mean'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/concept.py:231: RuntimeWarning: invalid value encountered in divide
  wg_dist_example = np.sum(weights * concept_distances, axis=0) / np.sum(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'wg_dist' with summary 'sd'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'wg_dist' with summary 'mean'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/concept.py:166: RuntimeWarning: invalid value encountered in divide
  conceptvar_by_example = np.sum(weights * class_diff, axis=0) / np.sum(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'conceptvar' with summary 'sd'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'conceptvar' with summary 'mean'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/concept.py:231: RuntimeWarning: invalid value encountered in divide
  wg_dist_example = np.sum(weights * concept_distances, axis=0) / np.sum(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'wg_dist' with summary 'sd'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'wg_dist' with summary 'mean'. Will set it as 'np.nan'.
  warnings.warn(
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/utils/create_feature_and_featurename.py:46: RuntimeWarning: divide by zero encountered in log
  feature = feature1.apply(lambda x: np.log(np.abs(float(x)))).to_list()
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/utils/create_feature_and_featurename.py:46: RuntimeWarning: divide by zero encountered in log
  feature = feature1.apply(lambda x: np.log(np.abs(float(x)))).to_list()
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/concept.py:166: RuntimeWarning: invalid value encountered in divide
  conceptvar_by_example = np.sum(weights * class_diff, axis=0) / np.sum(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'conceptvar' with summary 'sd'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'conceptvar' with summary 'mean'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/concept.py:231: RuntimeWarning: invalid value encountered in divide
  wg_dist_example = np.sum(weights * concept_distances, axis=0) / np.sum(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'wg_dist' with summary 'sd'. Will set it as 'np.nan'.
  warnings.warn(
/home/schaefeb/miniconda3/lib/python3.12/site-packages/pymfe/_internal.py:731: RuntimeWarning: Can't summarize feature 'wg_dist' with summary 'mean'. Will set it as 'np.nan'.
  warnings.warn(
/work/dlclarge1/schaefeb-AutoFE/meta/src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py:17: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  featurename = row[1][1]
/var/spool/slurm/job19131202/slurm_script: line 58: 2943675 Killed                  python3 src/Metadata/mfe/Add_MFE_Metafeatures_Parallel.py --group "$group"
Allocated memory per node: 153600 MB
DeprecationWarning: 'source deactivate' is deprecated. Use 'conda deactivate'.
Job execution complete.
Runtime: 1471
slurmstepd-kisexe12: error: Detected 1 oom_kill event in StepId=19131202.batch. Some of the step tasks have been OOM Killed.
